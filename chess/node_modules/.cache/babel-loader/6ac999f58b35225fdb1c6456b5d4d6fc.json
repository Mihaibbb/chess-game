{"ast":null,"code":"var _jsxFileName = \"A:\\\\Js\\\\Chess\\\\chess-1.3\\\\chess\\\\src\\\\Components\\\\Classic.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Board from './Board';\nimport RightSide from \"./RightSide\";\nimport LeftSide from \"./LeftSide\";\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Classic() {\n  _s();\n\n  const [buttonsTarget, setButtonsTarget] = useState(null);\n  const [random, setRandom] = useState(null);\n\n  const returnButtonsClick = e => {\n    let newTarget = e.target;\n\n    while (!newTarget.classList.contains('button')) {\n      newTarget = newTarget.parentElement;\n    }\n\n    setButtonsTarget(newTarget);\n    setRandom(Math.random());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(LeftSide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        color: -1,\n        prevButtons: buttonsTarget,\n        random: random\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n        clickButton: returnButtonsClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Classic, \"tATETq04dNyjW9Fjp1KAVe/AzZE=\");\n\n_c = Classic;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Classic\");","map":{"version":3,"sources":["A:/Js/Chess/chess-1.3/chess/src/Components/Classic.jsx"],"names":["React","useState","useEffect","useRef","Board","RightSide","LeftSide","Classic","buttonsTarget","setButtonsTarget","random","setRandom","returnButtonsClick","e","newTarget","target","classList","contains","parentElement","Math"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,oBAAP;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAE9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMW,kBAAkB,GAAIC,CAAD,IAAO;AAE9B,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAlB;;AAEA,WAAO,CAACD,SAAS,CAACE,SAAV,CAAoBC,QAApB,CAA6B,QAA7B,CAAR,EAAgD;AAC5CH,MAAAA,SAAS,GAAGA,SAAS,CAACI,aAAtB;AACH;;AAEDT,IAAAA,gBAAgB,CAACK,SAAD,CAAhB;AACAH,IAAAA,SAAS,CAACQ,IAAI,CAACT,MAAL,EAAD,CAAT;AACH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAC,CAAf;AAAkB,QAAA,WAAW,EAAEF,aAA/B;AAA8C,QAAA,MAAM,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA3BuBL,O;;KAAAA,O;AA2BvB","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport Board from './Board';\r\nimport RightSide from \"./RightSide\";\r\nimport LeftSide from \"./LeftSide\";\r\n\r\nimport '../styles/home.css';\r\n\r\nexport default function Classic() {\r\n\r\n    const [buttonsTarget, setButtonsTarget] = useState(null);\r\n    const [random, setRandom] = useState(null);\r\n\r\n    const returnButtonsClick = (e) => {\r\n\r\n        let newTarget = e.target;\r\n\r\n        while (!newTarget.classList.contains('button')) {\r\n            newTarget = newTarget.parentElement;\r\n        }\r\n\r\n        setButtonsTarget(newTarget);\r\n        setRandom(Math.random());\r\n    };\r\n    \r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"game\">\r\n                <LeftSide />\r\n                <Board color={-1} prevButtons={buttonsTarget} random={random}/>\r\n                <RightSide clickButton={returnButtonsClick}/>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}