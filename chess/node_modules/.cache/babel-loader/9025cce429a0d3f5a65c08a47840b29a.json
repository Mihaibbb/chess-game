{"ast":null,"code":"var _jsxFileName = \"A:\\\\Js\\\\Chess\\\\chess-1.3\\\\chess\\\\src\\\\Components\\\\Online.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Board from './Board';\nimport OnlineBoard from \"./OnlineBoard\";\nimport RightSide from \"./RightSide\";\nimport LeftSide from \"./LeftSide\";\nimport '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Online({\n  socket\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [color, setColor] = useState(null);\n  const [buttonsTarget, setButtonsTarget] = useState(null);\n  const [random, setRandom] = useState(null);\n  const [done, setDone] = useState(true);\n  const [numberOfPlayers, setNumberOfPlayers] = useState(null);\n  let players;\n  socket.on(\"rooms\", rooms => {\n    const isThisRoom = [...Object.keys(rooms)].filter(room => room == id);\n    if (isThisRoom === undefined) return null;\n  });\n  socket.emit(\"create-room\", id);\n  socket.emit(\"get-players\");\n  socket.on(\"players\", player => {\n    console.log(player, id, socket.id, JSON.parse(localStorage.getItem(\"socket\")));\n    const ownColor = localStorage.getItem(\"player\") !== null ? localStorage.getItem(\"player\") : player === 1 ? player : -1;\n    setColor(ownColor);\n\n    if (ownColor === -1) {\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        console.log(key);\n        if (key.includes('online-')) localStorage.removeItem(key);\n      }\n    }\n\n    if (localStorage.getItem(\"player\") === null) localStorage.setItem(\"player\", player === 1 ? player : -1);\n    setNumberOfPlayers(player); // if (localStorage.getItem(\"id\") === null) localStorage.setItem(\"id\", parseInt(id));\n    // else if (localStorage.getItem(\"id\") !== parseInt(id) && localStorage.length !== 0) {\n    //     localStorage.removeItem(\"id\");\n    //     localStorage.clear();\n    //     // window.location.reload();\n    // }\n  }); // if (id != JSON.parse(localStorage.getItem(\"socket\"))) return null;\n  // Request for room's players\n\n  const returnButtonsClick = e => {\n    let newTarget = e.target;\n\n    while (!newTarget.classList.contains('button')) {\n      newTarget = newTarget.parentElement;\n    }\n\n    setButtonsTarget(newTarget);\n    setRandom(Math.random());\n  };\n\n  useEffect(() => {\n    if (numberOfPlayers === null) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: [/*#__PURE__*/_jsxDEV(LeftSide, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(OnlineBoard, {\n          color: color,\n          prevButtons: buttonsTarget,\n          random: random,\n          socket: socket,\n          oppId: \"ij3YC-_VZmKbEahoAABH\",\n          players: numberOfPlayers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n          clickButton: returnButtonsClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }, [numberOfPlayers]);\n  return color && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(LeftSide, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OnlineBoard, {\n        color: color,\n        prevButtons: buttonsTarget,\n        random: random,\n        socket: socket,\n        oppId: \"ij3YC-_VZmKbEahoAABH\",\n        players: numberOfPlayers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RightSide, {\n        clickButton: returnButtonsClick,\n        empty: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Online, \"j/qm2iN/vHc3WZKMf7GuaX69Etc=\", false, function () {\n  return [useParams];\n});\n\n_c = Online;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Online\");","map":{"version":3,"sources":["A:/Js/Chess/chess-1.3/chess/src/Components/Online.jsx"],"names":["React","useState","useEffect","useParams","io","Board","OnlineBoard","RightSide","LeftSide","Online","socket","id","color","setColor","buttonsTarget","setButtonsTarget","random","setRandom","done","setDone","numberOfPlayers","setNumberOfPlayers","players","on","rooms","isThisRoom","Object","keys","filter","room","undefined","emit","player","console","log","JSON","parse","localStorage","getItem","ownColor","i","length","key","includes","removeItem","setItem","returnButtonsClick","e","newTarget","target","classList","contains","parentElement","Math"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,oBAAP;;AAEA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA4B;AAAA;;AAEvC,QAAM;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAxB;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,IAAD,CAAtD;AAEA,MAAIqB,OAAJ;AAEAZ,EAAAA,MAAM,CAACa,EAAP,CAAU,OAAV,EAAmBC,KAAK,IAAI;AACxB,UAAMC,UAAU,GAAG,CAAC,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAZ,CAAJ,EAAwBI,MAAxB,CAA+BC,IAAI,IAAIA,IAAI,IAAIlB,EAA/C,CAAnB;AACA,QAAIc,UAAU,KAAKK,SAAnB,EAA8B,OAAO,IAAP;AACjC,GAHD;AAKApB,EAAAA,MAAM,CAACqB,IAAP,CAAY,aAAZ,EAA2BpB,EAA3B;AAEAD,EAAAA,MAAM,CAACqB,IAAP,CAAY,aAAZ;AAEArB,EAAAA,MAAM,CAACa,EAAP,CAAU,SAAV,EAAqBS,MAAM,IAAI;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBrB,EAApB,EAAwBD,MAAM,CAACC,EAA/B,EAAmCwB,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAnC;AACA,UAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,QAArB,MAAmC,IAAnC,GAA0CD,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA1C,GAA2EN,MAAM,KAAK,CAAX,GAAeA,MAAf,GAAwB,CAAC,CAArH;AACAnB,IAAAA,QAAQ,CAAC0B,QAAD,CAAR;;AACA,QAAIA,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACjB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1C,cAAME,GAAG,GAAGL,YAAY,CAACK,GAAb,CAAiBF,CAAjB,CAAZ;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,YAAIA,GAAG,CAACC,QAAJ,CAAa,SAAb,CAAJ,EAA6BN,YAAY,CAACO,UAAb,CAAwBF,GAAxB;AAChC;AACJ;;AAED,QAAIL,YAAY,CAACC,OAAb,CAAqB,QAArB,MAAmC,IAAvC,EAA6CD,YAAY,CAACQ,OAAb,CAAqB,QAArB,EAA+Bb,MAAM,KAAK,CAAX,GAAeA,MAAf,GAAwB,CAAC,CAAxD;AAC7CX,IAAAA,kBAAkB,CAACW,MAAD,CAAlB,CAb2B,CAc3B;AACA;AACA;AACA;AACA;AACA;AACH,GApBD,EArBuC,CA2CvC;AACA;;AAEA,QAAMc,kBAAkB,GAAIC,CAAD,IAAO;AAE9B,QAAIC,SAAS,GAAGD,CAAC,CAACE,MAAlB;;AAEA,WAAO,CAACD,SAAS,CAACE,SAAV,CAAoBC,QAApB,CAA6B,QAA7B,CAAR,EAAgD;AAC5CH,MAAAA,SAAS,GAAGA,SAAS,CAACI,aAAtB;AACH;;AAEDrC,IAAAA,gBAAgB,CAACiC,SAAD,CAAhB;AACA/B,IAAAA,SAAS,CAACoC,IAAI,CAACrC,MAAL,EAAD,CAAT;AACH,GAVD;;AAYAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,eAAe,KAAK,IAAxB,EAA8B,OAAO,IAAP;AAE9B,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,KAAK,EAAER,KAApB;AAA2B,UAAA,WAAW,EAAEE,aAAxC;AAAuD,UAAA,MAAM,EAAEE,MAA/D;AAAuE,UAAA,MAAM,EAAEN,MAA/E;AAAuF,UAAA,KAAK,EAAC,sBAA7F;AAAoH,UAAA,OAAO,EAAEU;AAA7H;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,SAAD;AAAW,UAAA,WAAW,EAAE0B;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAbQ,EAaN,CAAC1B,eAAD,CAbM,CAAT;AAgBA,SAAOR,KAAK,iBACR;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEA,KAApB;AAA2B,QAAA,WAAW,EAAEE,aAAxC;AAAuD,QAAA,MAAM,EAAEE,MAA/D;AAAuE,QAAA,MAAM,EAAEN,MAA/E;AAAuF,QAAA,KAAK,EAAC,sBAA7F;AAAoH,QAAA,OAAO,EAAEU;AAA7H;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE0B,kBAAxB;AAA4C,QAAA,KAAK,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAnFuBrC,M;UAELN,S;;;KAFKM,M;AAmFvB","sourcesContent":["import React, {useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport Board from './Board';\r\nimport OnlineBoard from \"./OnlineBoard\";\r\nimport RightSide from \"./RightSide\";\r\nimport LeftSide from \"./LeftSide\";\r\n\r\nimport '../styles/home.css';\r\n\r\nexport default function Online({ socket }) {\r\n\r\n    const { id } = useParams();\r\n\r\n    const [color, setColor] = useState(null);\r\n    const [buttonsTarget, setButtonsTarget] = useState(null);\r\n    const [random, setRandom] = useState(null);\r\n    const [done, setDone] = useState(true);\r\n    const [numberOfPlayers, setNumberOfPlayers] = useState(null);\r\n\r\n    let players;\r\n\r\n    socket.on(\"rooms\", rooms => {\r\n        const isThisRoom = [...Object.keys(rooms)].filter(room => room == id);\r\n        if (isThisRoom === undefined) return null;\r\n    });\r\n\r\n    socket.emit(\"create-room\", id);\r\n\r\n    socket.emit(\"get-players\");\r\n\r\n    socket.on(\"players\", player => {\r\n        console.log(player, id, socket.id, JSON.parse(localStorage.getItem(\"socket\")));\r\n        const ownColor = localStorage.getItem(\"player\") !== null ? localStorage.getItem(\"player\") : player === 1 ? player : -1;\r\n        setColor(ownColor);\r\n        if (ownColor === -1) {\r\n            for (let i = 0; i < localStorage.length; i++) {\r\n                const key = localStorage.key(i);\r\n                console.log(key);\r\n                if (key.includes('online-')) localStorage.removeItem(key);\r\n            }\r\n        }\r\n        \r\n        if (localStorage.getItem(\"player\") === null) localStorage.setItem(\"player\", player === 1 ? player : -1);\r\n        setNumberOfPlayers(player);\r\n        // if (localStorage.getItem(\"id\") === null) localStorage.setItem(\"id\", parseInt(id));\r\n        // else if (localStorage.getItem(\"id\") !== parseInt(id) && localStorage.length !== 0) {\r\n        //     localStorage.removeItem(\"id\");\r\n        //     localStorage.clear();\r\n        //     // window.location.reload();\r\n        // }\r\n    });\r\n   \r\n    // if (id != JSON.parse(localStorage.getItem(\"socket\"))) return null;\r\n    // Request for room's players\r\n\r\n    const returnButtonsClick = (e) => {\r\n\r\n        let newTarget = e.target;\r\n\r\n        while (!newTarget.classList.contains('button')) {\r\n            newTarget = newTarget.parentElement;\r\n        }\r\n\r\n        setButtonsTarget(newTarget);\r\n        setRandom(Math.random());\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (numberOfPlayers === null) return null;\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <div className=\"game\">\r\n                    <LeftSide />\r\n                    <OnlineBoard color={color} prevButtons={buttonsTarget} random={random} socket={socket} oppId=\"ij3YC-_VZmKbEahoAABH\" players={numberOfPlayers} />\r\n                    <RightSide clickButton={returnButtonsClick}/>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }, [numberOfPlayers])\r\n\r\n    \r\n    return color && (\r\n        <div className=\"content\">\r\n            <div className=\"game\">\r\n                <LeftSide />\r\n                <OnlineBoard color={color} prevButtons={buttonsTarget} random={random} socket={socket} oppId=\"ij3YC-_VZmKbEahoAABH\" players={numberOfPlayers} />\r\n                <RightSide clickButton={returnButtonsClick} empty={true}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}