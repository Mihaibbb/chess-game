{"ast":null,"code":"var _jsxFileName = \"A:\\\\Js\\\\Chess\\\\chess-1.3\\\\chess\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Home from \"./Components/Home\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Classic from \"./Components/Classic\";\nimport Online from \"./Components/Online\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [userSocket, setUserSocket] = useState(null);\n  const [currentIds, setCurrentIds] = useState([]);\n  let id = null;\n  useEffect(() => {\n    const socket = io(\"http://localhost:8000\");\n    socket.on('connect', () => {\n      console.log('connected', socket.id, socket);\n      setUserSocket(socket);\n      if (JSON.parse(localStorage.getItem(\"socket\")) == null) localStorage.setItem(\"socket\", JSON.stringify(socket.id));\n      id = socket.id;\n    });\n    if (id !== null) socket.emit('ids', 1);\n    socket.on('current-ids', ids => {\n      setCurrentIds(ids);\n      console.log(ids);\n    });\n    socket.on(\"ok\", data => console.log(data));\n  }, []);\n  return userSocket && userSocket.connected && userSocket.id !== undefined && /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          id: userSocket.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/classic\",\n        children: /*#__PURE__*/_jsxDEV(Classic, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `/:id`,\n        children: /*#__PURE__*/_jsxDEV(Online, {\n          socket: userSocket,\n          ids: setCurrentIds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"yPxgt1Cda0HixGecz5LUy+KHTwc=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["A:/Js/Chess/chess-1.3/chess/src/App.js"],"names":["React","useEffect","useState","Home","BrowserRouter","Router","Route","Switch","io","Classic","Online","App","userSocket","setUserSocket","currentIds","setCurrentIds","id","socket","on","console","log","JSON","parse","localStorage","getItem","setItem","stringify","emit","ids","data","connected","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AAEA,MAAIc,EAAE,GAAG,IAAT;AAEAf,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMgB,MAAM,GAAGT,EAAE,CAAC,uBAAD,CAAjB;AAEAS,IAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,MAAM;AAEvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAM,CAACD,EAAhC,EAAoCC,MAApC;AACAJ,MAAAA,aAAa,CAACI,MAAD,CAAb;AACA,UAAII,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,KAA8C,IAAlD,EAAwDD,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA+BJ,IAAI,CAACK,SAAL,CAAeT,MAAM,CAACD,EAAtB,CAA/B;AACxDA,MAAAA,EAAE,GAAGC,MAAM,CAACD,EAAZ;AAEH,KAPD;AASA,QAAIA,EAAE,KAAK,IAAX,EAAiBC,MAAM,CAACU,IAAP,CAAY,KAAZ,EAAmB,CAAnB;AAEjBV,IAAAA,MAAM,CAACC,EAAP,CAAU,aAAV,EAAyBU,GAAG,IAAI;AAC5Bb,MAAAA,aAAa,CAACa,GAAD,CAAb;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,KAHD;AAKAX,IAAAA,MAAM,CAACC,EAAP,CAAU,IAAV,EAAgBW,IAAI,IAAIV,OAAO,CAACC,GAAR,CAAYS,IAAZ,CAAxB;AAGH,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,SAAOjB,UAAU,IAAIA,UAAU,CAACkB,SAAzB,IAAsClB,UAAU,CAACI,EAAX,KAAkBe,SAAxD,iBACH,QAAC,MAAD;AAAA,2BACI,QAAC,MAAD;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAEnB,UAAU,CAACI;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,MAAd;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEJ,UAAhB;AAA4B,UAAA,GAAG,EAAEG;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GArDuBJ,G;;KAAAA,G;AAqDvB","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Home from \"./Components/Home\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport Classic from \"./Components/Classic\";\r\nimport Online from \"./Components/Online\";\r\n\r\nexport default function App() {\r\n\r\n    const [userSocket, setUserSocket] = useState(null);\r\n    const [currentIds, setCurrentIds] = useState([]);\r\n    \r\n    let id = null;\r\n\r\n    useEffect(() => {\r\n       \r\n        const socket = io(\"http://localhost:8000\");\r\n        \r\n        socket.on('connect', () => {\r\n            \r\n            console.log('connected', socket.id, socket);\r\n            setUserSocket(socket);\r\n            if (JSON.parse(localStorage.getItem(\"socket\")) == null) localStorage.setItem(\"socket\", JSON.stringify(socket.id));\r\n            id = socket.id;\r\n\r\n        });\r\n\r\n        if (id !== null) socket.emit('ids', 1);\r\n\r\n        socket.on('current-ids', ids => {\r\n            setCurrentIds(ids);\r\n            console.log(ids);\r\n        });\r\n\r\n        socket.on(\"ok\", data => console.log(data));\r\n        \r\n\r\n    }, []);\r\n\r\n    return userSocket && userSocket.connected && userSocket.id !== undefined && (\r\n        <Router>\r\n            <Switch>\r\n\r\n                <Route exact path=\"/\">\r\n                    <Home id={userSocket.id} />\r\n                </Route>\r\n\r\n                <Route path=\"/classic\">\r\n                    <Classic />\r\n                </Route>\r\n\r\n                <Route path={`/:id`}>\r\n                    <Online socket={userSocket} ids={setCurrentIds}/>\r\n                </Route>\r\n        \r\n            </Switch>\r\n        </Router>\r\n        \r\n    );\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}